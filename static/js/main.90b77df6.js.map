{"version":3,"file":"static/js/main.90b77df6.js","mappings":"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","sources":["screens/LoginScreen.js","screens/HomeScreen.js","screens/SearchScreen.js","screens/NoticesScreen.js","screens/ResourcesScreen.js","screens/ContactScreen.js","screens/AdminPage.js","navigation/RoleNavigator.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// screens/LoginScreen.js\r\nimport React, { useState } from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Pressable,\r\n  StyleSheet,\r\n  Alert\r\n} from 'react-native';\r\n\r\nexport default function LoginScreen({ onLogin }) {\r\n  const [mode, setMode] = useState('login'); // 'login' 또는 'register'\r\n\r\n  // 로그인 폼\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // 회원가입 폼\r\n  const [company, setCompany] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [regEmail, setRegEmail] = useState('');\r\n\r\n  // 승인된 계정 목록 (하드코딩)\r\n  const approvedUsers = [\r\n    { email: 'hkyoon@younginat.com', password: 'ATFatf3366!', role: 'admin' },\r\n    { email: 'test@example.com',           password: 'pass1234',   role: 'admin' },\r\n    { email: 'user@example.com',           password: 'userpass',   role: 'user'  },\r\n  ];\r\n\r\n  const handleLogin = () => {\r\n    const user = approvedUsers.find(\r\n      u => u.email === email && u.password === password\r\n    );\r\n    if (user) {\r\n      onLogin(user.email, user.role);\r\n    } else {\r\n      Alert.alert('로그인 실패', '아이디 또는 비밀번호가 올바르지 않습니다.');\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    if (!company || !name || !phone || !regEmail) {\r\n      Alert.alert('입력 오류', '모든 정보를 입력해주세요.');\r\n      return;\r\n    }\r\n    Alert.alert('회원가입', '관리자 승인 후 이용 가능합니다.');\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.safe}>\r\n      <View style={styles.container}>\r\n        {/* 모드 전환 탭 */}\r\n        <View style={styles.tabBar}>\r\n          <Pressable\r\n            style={[styles.tab, mode === 'login' && styles.tabActive]}\r\n            onPress={() => setMode('login')}\r\n          >\r\n            <Text style={[styles.tabText, mode === 'login' && styles.tabTextActive]}>\r\n              로그인\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            style={[styles.tab, mode === 'register' && styles.tabActive]}\r\n            onPress={() => setMode('register')}\r\n          >\r\n            <Text style={[styles.tabText, mode === 'register' && styles.tabTextActive]}>\r\n              회원가입\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n\r\n        {/* 입력 폼 */}\r\n        <View style={styles.form}>\r\n          {mode === 'login' ? (\r\n            <>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"이메일\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                keyboardType=\"email-address\"\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"비밀번호\"\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                secureTextEntry\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"업체명\"\r\n                value={company}\r\n                onChangeText={setCompany}\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"성명\"\r\n                value={name}\r\n                onChangeText={setName}\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"연락처\"\r\n                value={phone}\r\n                onChangeText={setPhone}\r\n                keyboardType=\"phone-pad\"\r\n              />\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"메일주소\"\r\n                value={regEmail}\r\n                onChangeText={setRegEmail}\r\n                keyboardType=\"email-address\"\r\n              />\r\n            </>\r\n          )}\r\n        </View>\r\n\r\n        {/* 제출 버튼 */}\r\n        <Pressable\r\n          style={styles.button}\r\n          onPress={mode === 'login' ? handleLogin : handleRegister}\r\n        >\r\n          <Text style={styles.buttonText}>\r\n            {mode === 'login' ? '로그인' : '전송'}\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 24,\r\n    justifyContent: 'center',\r\n  },\r\n  tabBar: {\r\n    flexDirection: 'row',\r\n    marginBottom: 24,\r\n    justifyContent: 'center',\r\n  },\r\n  tab: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 24,\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: '#EEEEEE',\r\n  },\r\n  tabActive: {\r\n    borderBottomColor: '#00A8E8',\r\n  },\r\n  tabText: {\r\n    fontSize: 16,\r\n    color: '#777777',\r\n  },\r\n  tabTextActive: {\r\n    color: '#00A8E8',\r\n    fontWeight: '600',\r\n  },\r\n  form: {\r\n    marginBottom: 24,\r\n  },\r\n  input: {\r\n    backgroundColor: '#F9F9F9',\r\n    borderWidth: 1,\r\n    borderColor: '#CCCCCC',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 10,\r\n    fontSize: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#00A8E8',\r\n    paddingVertical: 14,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n","// screens/HomeScreen.js\r\nimport React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Pressable,\r\n  StyleSheet,\r\n  Dimensions\r\n} from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst { width } = Dimensions.get('window');\r\nconst CARD_SIZE = (width - 24 * 2 - 16) / 2;  // 좌우 패딩 24 + 카드간격 16\r\n\r\nexport default function HomeScreen({ navigation, role, onLogout }) {\r\n  const cards = [\r\n    { label: '강종 검색', icon: 'search',      screen: '검색' },\r\n    { label: '공지사항', icon: 'campaign',    screen: '공지' },\r\n    { label: '자료실',   icon: 'folder',      screen: '자료' },\r\n    { label: '문의하기', icon: 'chat-bubble', screen: '문의' },\r\n  ];\r\n\r\n  return (\r\n    <View style={styles.safe}>\r\n      {/* 로그아웃 버튼 */}\r\n      <Pressable style={styles.logoutButton} onPress={onLogout}>\r\n        <Text style={styles.logoutText}>로그아웃</Text>\r\n      </Pressable>\r\n\r\n      {/* 카드 그리드 */}\r\n      <View style={styles.grid}>\r\n        {cards.map(c => (\r\n          <Pressable\r\n            key={c.label}\r\n            style={styles.card}\r\n            onPress={()=> navigation.navigate(c.screen)}\r\n          >\r\n            <MaterialIcons\r\n              name={c.icon}\r\n              size={32}\r\n              color=\"#007C8C\"\r\n            />\r\n            <Text style={styles.cardText}>{c.label}</Text>\r\n          </Pressable>\r\n        ))}\r\n      </View>\r\n\r\n      {/* 관리자 전용 버튼 */}\r\n      {role === 'admin' && (\r\n        <Pressable\r\n          style={styles.adminButton}\r\n          onPress={()=> navigation.navigate('AdminPage')}\r\n        >\r\n          <Text style={styles.adminText}>관리자 페이지로</Text>\r\n        </Pressable>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  safe: {\r\n    flex: 1,\r\n    backgroundColor: '#FFFFFF',\r\n    paddingHorizontal: 24,\r\n    paddingTop: 16,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  logoutButton: {\r\n    alignSelf: 'flex-end',\r\n    backgroundColor: '#00A8E8',\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    borderRadius: 6,\r\n    marginBottom: 16,\r\n  },\r\n  logoutText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  grid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  card: {\r\n    width: CARD_SIZE,\r\n    height: CARD_SIZE,\r\n    backgroundColor: '#F0FCFB',\r\n    borderRadius: 16,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  cardText: {\r\n    marginTop: 8,\r\n    fontSize: 16,\r\n    color: '#007C8C',\r\n    fontWeight: '500',\r\n  },\r\n  adminButton: {\r\n    marginTop: 'auto',\r\n    marginBottom: 24,\r\n    backgroundColor: '#00A8E8',\r\n    paddingVertical: 12,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  adminText: {\r\n    color: '#FFFFFF',\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n","// screens/SearchScreen.js\nimport React, { useState, useEffect } from 'react';\nimport {\n  View, Text, TextInput, FlatList,\n  TouchableOpacity, Modal, Button,\n  ScrollView, StyleSheet,\n} from 'react-native';\n\n// data 폴더에 업로드한 최신 JSON 불러오기\nimport steelData from '../data/steelData.json';\n\nexport default function SearchScreen() {\n  const [query, setQuery] = useState('');\n  const [filtered, setFiltered] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  useEffect(() => {\n    setFiltered(steelData);\n  }, []);\n\n  const handleSearch = text => {\n    setQuery(text);\n    const q = text.trim().toLowerCase();\n    setFiltered(\n      q\n        ? steelData.filter(item =>\n            item.astm.toLowerCase().includes(q)\n          )\n        : steelData\n    );\n  };\n\n  const openDetail = item => {\n    setSelected(item);\n    setModalVisible(true);\n  };\n  const closeDetail = () => {\n    setModalVisible(false);\n    setSelected(null);\n  };\n\n  // 1) 쉼표(,) 또는 세미콜론(;)로 나누고, 2) 첫 공백 앞까지가 원소, 나머지가 범위\n  const parseComposition = compStr => {\n    return compStr\n      .split(/[,;]/)                 // 쉼표와 세미콜론 분리\n      .map(p => p.trim())            // 공백 제거\n      .filter(Boolean)               // 빈 문자열 제거\n      .map(p => {\n        const [element, ...rest] = p.split(' ');\n        return { element, range: rest.join(' ') };\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>강종 검색</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"ASTM 규격 검색 (예: A36)\"\n        value={query}\n        onChangeText={handleSearch}\n        autoCorrect={false}\n        autoCapitalize=\"characters\"\n      />\n\n      <FlatList\n        data={filtered}\n        keyExtractor={(item, i) => item.astm + i}\n        contentContainerStyle={styles.list}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={styles.item}\n            onPress={() => openDetail(item)}\n          >\n            <Text style={styles.itemText}>{item.astm}</Text>\n          </TouchableOpacity>\n        )}\n        ListEmptyComponent={\n          <Text style={styles.noData}>검색 결과가 없습니다.</Text>\n        }\n      />\n\n      <Modal\n        visible={modalVisible}\n        animationType=\"slide\"\n        onRequestClose={closeDetail}\n      >\n        <ScrollView contentContainerStyle={styles.modalContent}>\n          {selected && (\n            <>\n              <Text style={styles.detailTitle}>{selected.astm}</Text>\n\n              <Text style={styles.detailLabel}>설명</Text>\n              <Text style={styles.detailText}>{selected.description}</Text>\n\n              <Text style={styles.detailLabel}>성분 (Composition)</Text>\n              <View style={styles.table}>\n                <View style={[styles.tableRow, styles.tableHeader]}>\n                  <Text style={[styles.tableCell, styles.cellHeader]}>\n                    원소\n                  </Text>\n                  <Text style={[styles.tableCell, styles.cellHeader]}>\n                    함량 범위\n                  </Text>\n                </View>\n\n                {parseComposition(selected.composition).map((row, i) => (\n                  <View\n                    key={i}\n                    style={[\n                      styles.tableRow,\n                      i % 2 === 0 && styles.tableRowOdd,\n                    ]}\n                  >\n                    <Text style={styles.tableCell}>{row.element}</Text>\n                    <Text style={styles.tableCell}>{row.range}</Text>\n                  </View>\n                ))}\n              </View>\n\n              <Text style={styles.detailLabel}>JIS</Text>\n              <Text style={styles.detailText}>{selected.jis || '—'}</Text>\n\n              <Text style={styles.detailLabel}>DIN</Text>\n              <Text style={styles.detailText}>{selected.din || '—'}</Text>\n            </>\n          )}\n          <View style={styles.modalButton}>\n            <Button title=\"닫기\" onPress={closeDetail} />\n          </View>\n        </ScrollView>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 16, backgroundColor: '#fff' },\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 12 },\n  input: {\n    borderWidth: 1, borderColor: '#ccc', borderRadius: 8,\n    paddingHorizontal: 12, paddingVertical: 8, marginBottom: 16,\n  },\n  list: { paddingBottom: 24 },\n  item: {\n    backgroundColor: '#F0FDFA', borderRadius: 8,\n    padding: 16, marginBottom: 8,\n  },\n  itemText: { fontSize: 18, fontWeight: 'bold' },\n  noData: { textAlign: 'center', color: '#888', marginTop: 32 },\n\n  modalContent: { padding: 24, backgroundColor: '#fff' },\n  detailTitle: { fontSize: 28, fontWeight: 'bold', marginBottom: 16 },\n  detailLabel: { fontSize: 16, fontWeight: '600', marginTop: 12 },\n  detailText: { fontSize: 14, color: '#333', marginTop: 4 },\n\n  table: {\n    borderWidth: 1, borderColor: '#ccc',\n    marginTop: 8, marginBottom: 16,\n  },\n  tableRow: {\n    flexDirection: 'row', alignItems: 'center',\n  },\n  tableHeader: {\n    backgroundColor: '#E0F7F4',\n  },\n  tableRowOdd: {\n    backgroundColor: '#F5FFFE',\n  },\n  tableCell: {\n    flex: 1, padding: 8, borderRightWidth:1, borderRightColor:'#ccc',\n  },\n  cellHeader: {\n    fontWeight: '600', fontSize: 14,\n  },\n\n  modalButton: {\n    marginTop: 24, alignSelf: 'center', width: '40%',\n  },\n});\n","// screens/NoticesScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, FlatList, Text, StyleSheet } from 'react-native';\r\n\r\nexport default function NoticesScreen() {\r\n  const [notices, setNotices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // TODO: 공지사항 API 호출\r\n    setNotices([\r\n      { id:'1', title:'서버 점검 안내', date:'2025-05-10' },\r\n      { id:'2', title:'신규 기능 업데이트', date:'2025-05-08' },\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={notices}\r\n        keyExtractor={i=>i.id}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.row}>\r\n            <Text style={styles.title}>{item.title}</Text>\r\n            <Text style={styles.date}>{item.date}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{flex:1,backgroundColor:'#FFFFFF'},\r\n  row:{padding:16,borderBottomWidth:1,borderColor:'#E0E0E0'},\r\n  title:{fontSize:16,color:'#007C8C'},\r\n  date:{fontSize:12,color:'#808080',marginTop:4}\r\n});\r\n","// screens/ResourcesScreen.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, FlatList, Text, StyleSheet } from 'react-native';\r\n\r\nexport default function ResourcesScreen() {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // TODO: 자료실 API 호출\r\n    setFiles([\r\n      { id:'1', name:'소개문서.pdf' },\r\n      { id:'2', name:'사용자가이드.docx' },\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={files}\r\n        keyExtractor={i=>i.id}\r\n        renderItem={({ item }) => (\r\n          <Text style={styles.item}>{item.name}</Text>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{flex:1,padding:16,backgroundColor:'#FFFFFF'},\r\n  item:{padding:12,borderBottomWidth:1,borderColor:'#E0E0E0',fontSize:16}\r\n});\r\n","// screens/ContactScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, TextInput, Button, Alert, StyleSheet } from 'react-native';\r\n\r\nexport default function ContactScreen() {\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    // TODO: 문의 전송 API 호출\r\n    Alert.alert('문의가 전송되었습니다.', '감사합니다!');\r\n    setMsg('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        placeholder=\"문의 내용을 입력하세요\"\r\n        multiline\r\n        numberOfLines={4}\r\n        value={msg}\r\n        onChangeText={setMsg}\r\n        style={styles.input}\r\n        placeholderTextColor=\"#808080\"\r\n      />\r\n      <Button title=\"전송\" color=\"#00A8E8\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{flex:1,padding:16,backgroundColor:'#FFFFFF'},\r\n  input:{\r\n    borderWidth:1,\r\n    borderColor:'#007C8C',\r\n    borderRadius:8,\r\n    padding:12,\r\n    marginBottom:12,\r\n    textAlignVertical:'top'\r\n  }\r\n});\r\n","// screens/AdminPage.js\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\n\r\nexport default function AdminPage() {\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text style={styles.title}>관리자 페이지</Text>\r\n\r\n      {/* 여기에 관리자용 통계, 승인 대기 명단, 설정 등 원하는 컴포넌트 넣으시면 됩니다 */}\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>• 회원 승인 대기</Text>\r\n        <Text style={styles.placeholder}>(여기에 승인 대기 목록 표시)</Text>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>• 앱 통계</Text>\r\n        <Text style={styles.placeholder}>(여기에 일별/월별 접속 통계 표시)</Text>\r\n      </View>\r\n\r\n      {/* ... 추가 섹션 ... */}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 24,\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: '700',\r\n    marginBottom: 16,\r\n    color: '#007C8C',\r\n  },\r\n  section: {\r\n    marginBottom: 24,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#00A8E8',\r\n    marginBottom: 8,\r\n  },\r\n  placeholder: {\r\n    fontSize: 14,\r\n    color: '#555555',\r\n  },\r\n});\r\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen       from '../screens/HomeScreen';\nimport SearchScreen     from '../screens/SearchScreen';\nimport NoticesScreen    from '../screens/NoticesScreen';\nimport ResourcesScreen  from '../screens/ResourcesScreen';\nimport ContactScreen    from '../screens/ContactScreen';\nimport AdminPage        from '../screens/AdminPage';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function RoleNavigator({ role, onLogout }) {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n        tabBarStyle: { backgroundColor: '#F0FDFA' },\n        tabBarActiveTintColor: '#00A8E8',\n        tabBarInactiveTintColor: '#555555',\n      }}\n    >\n      <Tab.Screen\n        name=\"대시보드\"\n        options={{\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"dashboard\" size={24} color={color} />\n          )\n        }}\n      >\n        {props => <HomeScreen {...props} onLogout={onLogout} />}\n      </Tab.Screen>\n\n      <Tab.Screen\n        name=\"검색\"\n        component={SearchScreen}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"search\" size={24} color={color} />\n          )\n        }}\n      />\n\n      <Tab.Screen\n        name=\"공지\"\n        component={NoticesScreen}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"campaign\" size={24} color={color} />\n          )\n        }}\n      />\n\n      <Tab.Screen\n        name=\"자료\"\n        component={ResourcesScreen}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"folder\" size={24} color={color} />\n          )\n        }}\n      />\n\n      <Tab.Screen\n        name=\"문의\"\n        component={ContactScreen}\n        options={{\n          tabBarIcon: ({ color }) => (\n            <MaterialIcons name=\"chat-bubble\" size={24} color={color} />\n          )\n        }}\n      />\n\n      {/* 관리자 계정인 경우에만 관리자 탭을 추가 */}\n      {role === 'admin' && (\n        <Tab.Screen\n          name=\"관리자\"\n          component={AdminPage}\n          options={{\n            tabBarIcon: ({ color }) => (\n              <MaterialIcons name=\"admin-panel-settings\" size={24} color={color} />\n            )\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n}\n\n","import React, { useState }             from 'react';\nimport { NavigationContainer }         from '@react-navigation/native';\nimport { createNativeStackNavigator }  from '@react-navigation/native-stack';\nimport LoginScreen                     from './screens/LoginScreen';\nimport RoleNavigator                   from './navigation/RoleNavigator';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [userEmail, setUserEmail] = useState(null);\n  const [userRole,  setUserRole]  = useState(null);\n\n  const handleLogin = (email, role) => {\n    setUserEmail(email);\n    // 관리자 이메일 매칭\n    if (email === 'hkyoon@younginat.com') {\n      setUserRole('admin');\n    } else {\n      setUserRole(role);\n    }\n  };\n\n  const handleLogout = () => {\n    setUserEmail(null);\n    setUserRole(null);\n  };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        { !userEmail ? (\n          // 로그인 전\n          <Stack.Screen name=\"Login\">\n            {props => <LoginScreen {...props} onLogin={handleLogin} />}\n          </Stack.Screen>\n        ) : (\n          // 로그인 후: 무조건 RoleNavigator\n          <Stack.Screen name=\"Main\">\n            {props => (\n              <RoleNavigator\n                {...props}\n                role={userRole}\n                onLogout={handleLogout}\n              />\n            )}\n          </Stack.Screen>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [972], () => (__webpack_require__(9703)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["LoginScreen","onLogin","mode","setMode","useState","email","setEmail","password","setPassword","company","setCompany","name","setName","phone","setPhone","regEmail","setRegEmail","approvedUsers","role","_jsx","SafeAreaView","style","styles","safe","children","_jsxs","View","container","tabBar","Pressable","tab","tabActive","onPress","Text","tabText","tabTextActive","form","_Fragment","TextInput","input","placeholder","value","onChangeText","keyboardType","secureTextEntry","button","handleLogin","user","find","u","Alert","alert","handleRegister","buttonText","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginBottom","paddingVertical","borderBottomWidth","borderBottomColor","fontSize","color","fontWeight","borderWidth","borderColor","borderRadius","alignItems","width","Dimensions","get","CARD_SIZE","HomeScreen","navigation","onLogout","logoutButton","logoutText","grid","label","icon","screen","map","c","card","navigate","MaterialIcons","size","cardText","adminButton","adminText","paddingTop","alignSelf","flexWrap","height","marginTop","SearchScreen","query","setQuery","filtered","setFiltered","selected","setSelected","modalVisible","setModalVisible","useEffect","steelData","closeDetail","title","text","q","trim","toLowerCase","filter","item","astm","includes","autoCorrect","autoCapitalize","FlatList","data","keyExtractor","i","contentContainerStyle","list","renderItem","TouchableOpacity","openDetail","itemText","ListEmptyComponent","noData","Modal","visible","animationType","onRequestClose","ScrollView","modalContent","detailTitle","detailLabel","detailText","description","table","tableRow","tableHeader","tableCell","cellHeader","compStr","composition","split","p","Boolean","element","rest","range","join","row","tableRowOdd","jis","din","modalButton","Button","padding","paddingBottom","textAlign","borderRightWidth","borderRightColor","NoticesScreen","notices","setNotices","id","date","ResourcesScreen","files","setFiles","ContactScreen","msg","setMsg","multiline","numberOfLines","placeholderTextColor","handleSubmit","textAlignVertical","AdminPage","section","sectionTitle","Tab","createBottomTabNavigator","RoleNavigator","Navigator","screenOptions","headerShown","tabBarStyle","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","options","tabBarIcon","props","Object","assign","component","Stack","createNativeStackNavigator","registerRootComponent","userEmail","setUserEmail","userRole","setUserRole","handleLogout","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}